@using PagedList;
@using PagedList.Mvc;
@model IPagedList<ShoeControl.Models.Products.ProductsViewModel>
<div>

</div>
<h1></h1>
<h1></h1>
@if (Convert.ToInt32(this.Session["role_id"]) == 1)
{
    <caption>@Html.ActionLink("Create New", "Create") </caption>
}
<p>
    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
    {
        <b>Search By: </b>@Html.RadioButton("searchBy", "Name") <text>Name</text>
        @Html.RadioButton("searchBy", "Id", true) <text>Id</text><br/>
        @Html.TextBox("search")<input type="submit" value="Search">
    
    }

</p>
<table class="table">

    <tr>

        <th>
            @Html.DisplayNameFor(model => model.First().Name)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.First().Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Suppliers)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Store)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Stock)
        </th>
        
        <th>
            @Html.DisplayNameFor(model => model.First().Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Size)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Colour)
        </th>

        <th></th>
    </tr>


    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Suppliers)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Store)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
           
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Colour)
            </td>
            @if (Convert.ToInt32(this.Session["role_id"]) == 1)
            {
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ProductId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ProductId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ProductId }, new { onclick = "return confirm('Are you sure you want to delete?');" })
                </td>


            }
        </tr>
    }


</table>
@Html.PagedListPager(Model, page=>Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], search= Request.QueryString["search"] }),
new PagedListRenderOptions(){Display=PagedListDisplayMode.IfNeeded,DisplayPageCountAndCurrentLocation=true})

